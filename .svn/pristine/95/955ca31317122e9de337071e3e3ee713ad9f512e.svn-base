<?xml version="1.0" encoding="utf-8" ?>
<!--iBatis Map File-->
<sqlMap namespace="eHospital" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <statements>
    <!--Revision:0,d0c02d55591882830b2173548e8d6dc2-->
    <statement id="DAO00012_GetList" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select
      DICTIONARY_ID,
      DICTIONARY_CODE,
      DICTIONARY_NAME,
      ATTRIBUTE1,
      ATTRIBUTE2,
      DICTIONARY_NAME_EN,
      DICTIONARY_TYPE_CODE
      from LST_DICTIONARY
      where LST_DICTIONARY.Enabled = '1'
      <!--<dynamic prepend="where">
                <isParameterPresent>-->
      <!--where BENHVIEN_ID = '$BENHVIEN_ID$'-->
      <isPropertyAvailable prepend="AND" property="DICTIONARY_TYPE_CODE">
        LST_DICTIONARY.DICTIONARY_TYPE_CODE = '$DICTIONARY_TYPE_CODE$'
      </isPropertyAvailable>
      <isPropertyAvailable prepend="AND" property="DICTIONARY_TYPE_ID">
        LST_DICTIONARY.DICTIONARY_TYPE_ID = '$DICTIONARY_TYPE_ID$'
      </isPropertyAvailable>
      <isPropertyAvailable prepend="AND" property="Attribute1">
        LST_DICTIONARY.Attribute1 = '$Attribute1$'
      </isPropertyAvailable>
      <isPropertyAvailable prepend="AND" property="LST_DICTIONARY_TYPE_CODE">
        LST_DICTIONARY.DICTIONARY_TYPE_CODE in ($LST_DICTIONARY_TYPE_CODE$)
      </isPropertyAvailable>
      <!--<isPropertyAvailable prepend="AND" property="Enabled">
        LST_DICTIONARY.Enabled = '$Enabled$'
      </isPropertyAvailable>-->
      <!--</isParameterPresent>
            </dynamic>-->
      order by LST_DICTIONARY.IDX
    </statement>
    <!--Revision:0,e992bd61da83c3d75485a42461ecaab2-->
    <statement id="DAO00012_GetPhongBenhDicID" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select DICTIONARY_ID
      from LST_DICTIONARY
      where
      DICTIONARY_CODE = '$DICTIONARY_CODE$'
    </statement>
    <statement id="DAO00012_GetUserLogin" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from dbo.TBL_USERLOG
      <dynamic prepend="where">
        <isParameterPresent>
          <isNotEmpty prepend="and" property="USERID">
            USERID = $USERID$
          </isNotEmpty>
          <isNotEmpty prepend="and" property="FROMDATE">
            CONVERT(DATE,CREATEDDATE) &gt;= CONVERT(DATE,'$FROMDATE$')
          </isNotEmpty>
          <isNotEmpty prepend="and" property="TODATE">
            CONVERT(DATE,CREATEDDATE) &lt;= CONVERT(DATE,'$TODATE$')
        </isNotEmpty>
        </isParameterPresent>
      </dynamic>
      ORDER BY CREATEDDATE
    </statement>
    <statement id="DAO00012_GetLoaiTCLS" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select DICTIONARY_ID, DICTIONARY_CODE, DICTIONARY_NAME, cast('0' as Bit) CHON
      from LST_DICTIONARY      
      where DICTIONARY_TYPE_CODE = 'KHAMBENH_LOAI_TRIEUCHUNGLS'
      order by LST_DICTIONARY.IDX
    </statement>
    <statement id="DAO00012_GetAllTCLS" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select MALOAITRIEUCHUNG DICTIONARY_TYPE_CODE, MALOAITRIEUCHUNG DICTIONARY_CODE,
      TENTRIEUCHUNG DICTIONARY_NAME from TM_TRIEUCHUNGLS
    </statement>
    <statement id="DAO00012_GetDanhsachBNNoitru" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
      select *, COUNT(*) OVER() as TOTALROWS,  ROW_NUMBER() OVER(order by lst.SOBENHAN asc) as ROWNUMBER
      from
      (select distinct cast('0' as bit) CHON, ntba.*,
      bn.TENBENHNHAN, ISNULL(bn.NGAYSINH, bn.NAMSINH) NGAYSINH, bn.DIACHITHUONGTRU, bn.MAYTE,
      tn.SOBHYT SOTHE,
      dt.TENDOITUONG DOITUONG, nv.TENNHANVIEN BACSICHIDINH,
      (select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = ntba.BENHAN_ID order by LUUTRU_ID desc) LUUTRU_ID
      from TT_NOITRU_BENHAN ntba
      left join TT_TIEPNHAN tn on tn.TIEPNHAN_ID = ntba.TIEPNHAN_ID
      left join TT_BENHNHAN bn on bn.BENHNHAN_ID = tn.BENHNHAN_ID
      left join TM_DOITUONG dt on dt.DOITUONG_ID = tn.DOITUONG_ID
      left join TM_NHANVIEN nv on nv.NHANVIEN_ID = ntba.BACSIDIEUTRI_ID
      where
      ntba.TRANGTHAI = 'DANGDIEUTRI' and ntba.KHOACHUYENDEN_ID = '$KHOACHUYENDEN_ID$'
      <isNotEmpty prepend="and" property="TUNGAY">
        ntba.NGAYVAOVIEN &#62;&#61; '$TUNGAY$'
    </isNotEmpty>
    <isNotEmpty prepend="and" property="DENNGAY">
      ntba.NGAYVAOVIEN &#60;&#61; '$DENNGAY$'
    </isNotEmpty>
      <isNotEmpty prepend="and" property="BACSIDIEUTRI_ID">
        ntba.BACSIDIEUTRI_ID = '$BACSIDIEUTRI_ID$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="MABENHNHAN">
        <!--B.SOTIEPNHAN = '$MABENHNHAN$'-->
        (bn.TENBENHNHAN like '%' + #MABENHNHAN# + '%' OR bn.MAYTE like '%' + #MABENHNHAN# + '%' OR ntba.SOBENHAN like '%' + #MABENHNHAN# + '%')
      </isNotEmpty>
      ) lst
      ) ds
      <isNotEmpty prepend="" property="FROMROW">
        where
        ds.ROWNUMBER between $FROMROW$ and $TOROW$
      </isNotEmpty>
    </statement>
    <statement id="DAO00012_GetList_DichVu_DKTT" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select CB.CANHBAO_ID, CB.DICHVU_ID, DV.MADICHVU, DV.TENDICHVU, CB.MAICD, CB.NOIDUNGCANHBAO, CB.GHICHU, CAST(CB.TAMNGUNG AS BIT) AS TAMNGUNG
      from TM_DICHVU_CANHBAO_TT35 (nolock) CB
      inner join TM_DICHVU (nolock) DV on DV.DICHVU_ID = CB.DICHVU_ID and DV.BENHVIEN_ID = CB.BENHVIEN_ID
      where CB.BENHVIEN_ID = '$BENHVIEN_ID$'
      order by DV.TENDICHVU, CB.NOIDUNGCANHBAO
    </statement>
    <statement id="DAO00012_Delete_DichVu_DKTT" parameterClass="System.String" resultClass="System.Int32">
      delete from TM_DICHVU_CANHBAO_TT35
      where CANHBAO_ID IN ($LST_CANHBAO_ID$) and BENHVIEN_ID = '$BENHVIEN_ID$'
    </statement>
    <update id="DAO00012_Update_DichVu_DKTT" parameterClass="HashTable">
      update TM_DICHVU_CANHBAO_TT35
      set
      DICHVU_ID = #DICHVU_ID#
      , MAICD = #MAICD#
      , NOIDUNGCANHBAO = #NOIDUNGCANHBAO#
      , GHICHU = #GHICHU#
      , TAMNGUNG = #TAMNGUNG#
      , NGAYCAPNHAT = #NGAYCAPNHAT#
      , NGUOICAPNHAT = #NGUOICAPNHAT#
      where
      CANHBAO_ID = $CANHBAO_ID$
    </update>
    <statement id="DAO00012_Insert_DichVu_DKTT" parameterClass="DataObject" resultClass="DataObject">
      INSERT INTO TM_DICHVU_CANHBAO_TT35 (DICHVU_ID, MAICD, NOIDUNGCANHBAO, GHICHU, TAMNGUNG, BENHVIEN_ID, NGAYTAO, NGUOITAO)
      VALUES (#DICHVU_ID#, #MAICD#, #NOIDUNGCANHBAO#, #GHICHU#, #TAMNGUNG#, #BENHVIEN_ID#, #NGAYTAO#, #NGUOITAO#)

      SELECT SCOPE_IDENTITY()
    </statement>
    <statement id="DAO00012_CheckCanhBaoDichVu_DKTT_NgoaiTru" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      IF EXISTS (SELECT CANHBAO_ID FROM TM_DICHVU_CANHBAO_TT35 WHERE DICHVU_ID = $DICHVU_ID$ and TAMNGUNG = '0')
      BEGIN
      DECLARE @MAICD varchar(1000), @NOIDUNGCANHBAO nvarchar(2000)

      SELECT top 1 @MAICD = MAICD, @NOIDUNGCANHBAO = NOIDUNGCANHBAO FROM TM_DICHVU_CANHBAO_TT35 WHERE DICHVU_ID = $DICHVU_ID$ and TAMNGUNG = '0'

      IF @MAICD IS NULL
      BEGIN
      SELECT -1 AS RESULT, @NOIDUNGCANHBAO AS NOIDUNGCANHBAO
      RETURN
      END
      ELSE IF EXISTS (select KB.KHAMBENH_ID
      from TT_NGOAITRU_KHAMBENH (nolock) KB
      inner join TM_ICD (nolock) ICD on ICD.ICD_ID = KB.CHANDOANICD_ID
      left join TT_NGOAITRU_KHAMBENH_ICD (nolock) KB_ICD on KB_ICD.KHAMBENH_ID = KB.KHAMBENH_ID
      left join TM_ICD (nolock) ICD_P on ICD_P.ICD_ID = KB_ICD.ICD_ID
      where KB.TIEPNHAN_ID = $TIEPNHAN_ID$
      and (ICD.MAICD in (select part from fnSplit(@MAICD, ';'))
      or ICD_P.MAICD in (select part from fnSplit(@MAICD, ';'))
      )
      )
      BEGIN
      SELECT 1 AS RESULT
      RETURN
      END
      ELSE
      BEGIN
      SELECT -1 AS RESULT, @NOIDUNGCANHBAO AS NOIDUNGCANHBAO
      RETURN
      END
      END
      ELSE
      BEGIN
      SELECT 1 AS RESULT
      RETURN
      END
    </statement>
    <statement id="DAO00012_CheckCanhBaoDichVu_DKTT_NoiTru" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      IF EXISTS (SELECT CANHBAO_ID FROM TM_DICHVU_CANHBAO_TT35 WHERE DICHVU_ID = $DICHVU_ID$ and TAMNGUNG = '0')
      BEGIN
      DECLARE @MAICD varchar(1000), @NOIDUNGCANHBAO nvarchar(2000)

      SELECT top 1 @MAICD = MAICD, @NOIDUNGCANHBAO = NOIDUNGCANHBAO FROM TM_DICHVU_CANHBAO_TT35 WHERE DICHVU_ID = $DICHVU_ID$ and TAMNGUNG = '0'

      IF @MAICD IS NULL
      BEGIN
      SELECT -1 AS RESULT, @NOIDUNGCANHBAO AS NOIDUNGCANHBAO
      RETURN
      END
      ELSE IF EXISTS (select BENHAN_ID
      from TT_NOITRU_BENHAN (nolock) BA
      left join TM_ICD (nolock) ICD_1 on ICD_1.ICD_ID = BA.ICD_VAOKHOA
      left join TM_ICD (nolock) ICD_2 on ICD_2.ICD_ID = BA.ICD_BENHCHINH
      left join TM_ICD (nolock) ICD_3 on ICD_3.ICD_ID = BA.ICDRAVIEN_CHINH
      left join TM_ICD (nolock) ICD_P on ICD_P.MAICD in (select part from fnSplit(BA.ICD_BENHPHU, ';'))
      where BA.BENHAN_ID = $BENHAN_ID$
      and (ICD_1.MAICD in (select part from fnSplit(@MAICD, ';'))
      or ICD_2.MAICD in (select part from fnSplit(@MAICD, ';'))
      or ICD_3.MAICD in (select part from fnSplit(@MAICD, ';'))
      or ICD_P.MAICD in (select part from fnSplit(@MAICD, ';'))
      )
      )
      BEGIN
      SELECT 1 AS RESULT
      RETURN
      END
      ELSE
      BEGIN
      SELECT -1 AS RESULT, @NOIDUNGCANHBAO AS NOIDUNGCANHBAO
      RETURN
      END
      END
      ELSE
      BEGIN
      SELECT 1 AS RESULT
      RETURN
      END
    </statement>
  </statements>
</sqlMap>
