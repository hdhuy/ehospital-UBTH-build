<?xml version="1.0" encoding="utf-8" ?>
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.3.SQLMap.cst at 11/11/2015 9:30:18 AM
//				Any manual editing will be lost in re-generation.
//===========================================================================-->
<sqlMap namespace="eHospital" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <statements>
    <statement id="DAO00069_GetDanhSachNoiTru_BHYT"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
      SELECT ROW_NUMBER() OVER(order by B.SOTIEPNHAN) as ROWNUMBER,
      A.SOBENHAN, A.BENHAN_ID, 
      E.NOILAP_ID as KHOAVAO_ID, 
      A.TRANGTHAI, IsNull(A.BACSIDIEUTRI_ID, E.BACSICHIDINH_ID) as BACSIDIEUTRI_ID,
      B.TIEPNHAN_ID, B.SOTIEPNHAN, B.SOBHYT, B.DOITUONG_ID, A.THOIGIANVAOKHOA,
      C.TENBENHNHAN, C.NGAYSINH, C.NAMSINH, C.BENHNHAN_ID, C.MAYTE, B.BHYTTUNGAY, B.BHYTDENNGAY , C.SONHA,
      C.GIOITINH
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and B.TRANGTHAI = 'NOITRU'
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_XACNHAN E on E.BENHAN_ID = A.BENHAN_ID
      where
      len(B.SOBHYT) > 0
      and A.KHOACHUYENDEN_ID is not null  and
      (E.TRANGTHAI = 'DAXACNHAN' OR E.TRANGTHAI = 'HUYXACNHAN')
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      and B.BENHVIEN_ID = '$BENHVIEN_ID$' and A.KHOACHUYENDEN_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>      
      ) lst
      order by lst.SOTIEPNHAN
    </statement>
    <statement id="DAO00069_GetDanhSachNoiTru"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
      SELECT ROW_NUMBER() OVER(order by B.SOTIEPNHAN) as ROWNUMBER,  
      A.SOBENHAN, A.BENHAN_ID, A.SOLUUTRU
      <!--,Isnull(A.KHOACHUYENDEN_ID, A.KHOAVAO_ID) as KHOAVAO_ID-->
      , E.NOILAP_ID as KHOAVAO_ID
      , A.TRANGTHAI, IsNull(A.BACSIDIEUTRI_ID, E.BACSICHIDINH_ID) as BACSIDIEUTRI_ID,
      B.TIEPNHAN_ID, B.SOTIEPNHAN, B.SOBHYT as SOTHE, B.DOITUONG_ID, A.NGAYVAOKHOA as NGAYCAPCUU, A.THOIGIANVAOKHOA as THOIGIANCAPCUU,
      C.TENBENHNHAN, C.NGAYSINH, C.NAMSINH, C.BENHNHAN_ID, C.MAYTE, F.GIUONGBENH_ID, A.THOIGIANRAVIEN
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID
      and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_NOITRU_XACNHAN E on E.BENHAN_ID = A.BENHAN_ID
      left join TT_NOITRU_LUUTRUCHITIET F on D.LUUTRU_ID = F.LUUTRU_ID and F.LUUTRUCHITIET_CURRENT = '1'
      and F.LUUTRUCHITIET_ID in (select top 1 LUUTRUCHITIET_ID from TT_NOITRU_LUUTRUCHITIET where LUUTRU_ID = D.LUUTRU_ID order by LUUTRUCHITIET_ID desc)
      where
      A.KHOACHUYENDEN_ID is not null  and
      (E.TRANGTHAI = 'DAXACNHAN' OR E.TRANGTHAI = 'HUYXACNHAN')
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->
      and B.BENHVIEN_ID = '$BENHVIEN_ID$' and A.KHOACHUYENDEN_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        <!--C.MAYTE = '$MABENHNHAN$'-->
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>        
      </isNotEmpty>
      <isNotEmpty prepend="" property="LOAICAPCUU_NOITRU">
        <isEqual prepend="AND" property="LOAICAPCUU_NOITRU" compareValue="CAPCUU">
          A.SOBENHAN = A.SOCAPCUU
        </isEqual>
      </isNotEmpty>
      ) lst
      where
      lst.ROWNUMBER between $FROMROW$ and $TOROW$
      order by lst.SOTIEPNHAN
    </statement>
    <statement id="DAO00069_GetCountDanhSachNoiTru"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select count(A.SOBENHAN) as TOTALROWS
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID
      and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_NOITRU_XACNHAN E on E.BENHAN_ID = A.BENHAN_ID
      left join TT_NOITRU_LUUTRUCHITIET F on D.LUUTRU_ID = F.LUUTRU_ID and F.LUUTRUCHITIET_CURRENT = '1'
      and F.LUUTRUCHITIET_ID in (select top 1 LUUTRUCHITIET_ID from TT_NOITRU_LUUTRUCHITIET where LUUTRU_ID = D.LUUTRU_ID order by LUUTRUCHITIET_ID desc)
      where
      A.KHOACHUYENDEN_ID is not null  and
      (E.TRANGTHAI = 'DAXACNHAN' OR E.TRANGTHAI = 'HUYXACNHAN')
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->
      and B.BENHVIEN_ID = '$BENHVIEN_ID$' and A.KHOACHUYENDEN_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        <!--C.MAYTE = '$MABENHNHAN$'-->
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
      <isNotEmpty prepend="" property="LOAICAPCUU_NOITRU">
        <isEqual prepend="AND" property="LOAICAPCUU_NOITRU" compareValue="CAPCUU">
          A.SOBENHAN = A.SOCAPCUU
        </isEqual>
      </isNotEmpty>
      <!--order by B.SOTIEPNHAN-->
    </statement>
    <statement id="DAO00069_GetDanhSachCapCuu"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
      select ROW_NUMBER() OVER(order by B.SOTIEPNHAN) as ROWNUMBER,
      A.SOBENHAN, A.SOCAPCUU, A.BENHAN_ID, Isnull(A.KHOACHUYENDEN_ID, A.KHOAVAO_ID) as KHOAVAO_ID, A.TRANGTHAI,  E.BACSICAPCUU_ID as  BACSICHIDINH_ID, A.BACSIDIEUTRI_ID,
      B.TIEPNHAN_ID, B.SOTIEPNHAN, B.SOBHYT as SOTHE, B.DOITUONG_ID, A.NGAYVAOKHOA as NGAYCAPCUU, A.THOIGIANVAOKHOA as THOIGIANCAPCUU,
      C.TENBENHNHAN, C.NGAYSINH, C.NAMSINH, C.BENHNHAN_ID, C.MAYTE, A.KETQUADIEUTRI_ID
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_TIEPNHAN_THONGTINCAPCUU E on E.TIEPNHAN_ID = A.TIEPNHAN_ID and E.BENHAN_ID = A.BENHAN_ID
      where
      <!--A.KHOACHUYENDEN_ID is null and-->
      A.KHOAVAO_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->      
      and B.BENHVIEN_ID = '$BENHVIEN_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        <!--C.MAYTE = '$MABENHNHAN$'-->
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
      <isNotEmpty prepend="" property="LOAICAPCUU_NOITRU">
        <isEqual prepend="AND" property="LOAICAPCUU_NOITRU" compareValue="CAPCUU">
          <!--A.SOBENHAN = A.SOCAPCUU-->
          A.SOCAPCUU is not NULL
        </isEqual>
      </isNotEmpty>
      ) lst
      where
      lst.ROWNUMBER between $FROMROW$ and $TOROW$
      order by lst.SOTIEPNHAN
    </statement>
    <statement id="DAO00069_GetCountDanhSachCapCuu"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select count(B.SOTIEPNHAN) as TOTALROWS
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_TIEPNHAN_THONGTINCAPCUU E on E.TIEPNHAN_ID = A.TIEPNHAN_ID and E.BENHAN_ID = A.BENHAN_ID
      where
      <!--A.KHOACHUYENDEN_ID is null and-->
      A.KHOAVAO_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->
      and B.BENHVIEN_ID = '$BENHVIEN_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        <!--C.MAYTE = '$MABENHNHAN$'-->
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
      <isNotEmpty prepend="" property="LOAICAPCUU_NOITRU">
        <isEqual prepend="AND" property="LOAICAPCUU_NOITRU" compareValue="CAPCUU">
          <!--A.SOBENHAN = A.SOCAPCUU-->
          A.SOCAPCUU is not NULL
        </isEqual>
      </isNotEmpty> 
    </statement>
    <statement id="DAO00069_GetDanhSachCapCuuChuyenKhoa"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
      select ROW_NUMBER() OVER(order by B.SOTIEPNHAN) as ROWNUMBER,
      A.SOBENHAN, A.SOCAPCUU, A.BENHAN_ID, Isnull(A.KHOACHUYENDEN_ID, A.KHOAVAO_ID) as KHOAVAO_ID, A.TRANGTHAI,  E.BACSICAPCUU_ID as BACSICHIDINH_ID, A.BACSIDIEUTRI_ID,
      B.TIEPNHAN_ID, B.SOTIEPNHAN, B.SOBHYT as SOTHE, B.DOITUONG_ID, A.NGAYVAOKHOA as NGAYCAPCUU, A.THOIGIANVAOKHOA as THOIGIANCAPCUU,
      C.TENBENHNHAN, C.NGAYSINH, C.NAMSINH, C.BENHNHAN_ID, C.MAYTE, A.KETQUADIEUTRI_ID
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID <!--and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')-->
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_TIEPNHAN_THONGTINCAPCUU E on E.TIEPNHAN_ID = A.TIEPNHAN_ID and E.BENHAN_ID = A.BENHAN_ID
      where
      A.KHOAVAO_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="TUNGAY">
      A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
    </isNotEmpty>
    <isNotEmpty prepend="and" property="DENNGAY">
      A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
    </isNotEmpty>
    <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->      
      and B.BENHVIEN_ID = '$BENHVIEN_ID$'
      and A.SOCAPCUU is not NULL and A.SOCAPCUU != A.SOBENHAN
      <isNotEmpty prepend="and" property="MABENHNHAN">
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
        <!--C.MAYTE = '$MABENHNHAN$'-->
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
      ) lst
      where
      lst.ROWNUMBER between $FROMROW$ and $TOROW$
      order by lst.SOTIEPNHAN
    </statement>
    <statement id="DAO00069_GetCountDanhSachCapCuuChuyenKhoa"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select Count(B.SOTIEPNHAN) as TOTALROWS
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID <!--and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')-->
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_TIEPNHAN_THONGTINCAPCUU E on E.TIEPNHAN_ID = A.TIEPNHAN_ID and E.BENHAN_ID = A.BENHAN_ID
      where
      A.KHOAVAO_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      <!--(A.NGAYVAOKHOA BETWEEN '$TUNGAY$' AND '$DENNGAY$')-->
      and B.BENHVIEN_ID = '$BENHVIEN_ID$'
      and A.SOCAPCUU is not NULL and A.SOCAPCUU != A.SOBENHAN
      <isNotEmpty prepend="and" property="MABENHNHAN">
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
        <!--C.MAYTE = '$MABENHNHAN$'-->
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
    
    </statement>
    <statement id="DAO00069_GetDanhSachNgoaiTru"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select * from
      (
        select ROW_NUMBER() OVER(order by list.SOTIEPNHAN) as ROWNUMBER,* from
        (
        SELECT distinct
        A.SOBENHAN, A.BENHAN_ID
        , E.NOILAP_ID as KHOAVAO_ID
        , A.TRANGTHAI, IsNull(A.BACSIDIEUTRI_ID, E.BACSICHIDINH_ID) as BACSIDIEUTRI_ID,
        B.TIEPNHAN_ID, B.SOTIEPNHAN, B.SOBHYT as SOTHE, B.DOITUONG_ID, A.NGAYVAOKHOA as NGAYCAPCUU, A.THOIGIANVAOKHOA as THOIGIANCAPCUU,
        C.TENBENHNHAN, C.NGAYSINH, C.NAMSINH, C.BENHNHAN_ID, C.MAYTE, F.GIUONGBENH_ID
        from TT_NOITRU_BENHAN A
        inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
        inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
        left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID
        and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
        left join TT_NOITRU_XACNHAN E on E.BENHAN_ID = A.BENHAN_ID
        left join TT_NOITRU_LUUTRUCHITIET F on D.LUUTRU_ID = F.LUUTRU_ID and F.LUUTRUCHITIET_CURRENT = '1'
        and F.LUUTRUCHITIET_ID in (select top 1 LUUTRUCHITIET_ID from TT_NOITRU_LUUTRUCHITIET where LUUTRU_ID = D.LUUTRU_ID order by LUUTRUCHITIET_ID desc)
        left join TT_NOITRU_DOTDIEUTRI G on G.BENHNHAN_ID = B.BENHNHAN_ID
        where
        A.KHOACHUYENDEN_ID is not null  and A.LOAIBENHAN = '$LOAIBENHAN$' and
        (E.TRANGTHAI = 'DAXACNHAN' OR E.TRANGTHAI = 'HUYXACNHAN')
          and convert(date,A.NGAYVAOKHOA) between '$TUNGAY$' and '$DENNGAY$'
        and B.BENHVIEN_ID = '$BENHVIEN_ID$' and A.KHOACHUYENDEN_ID = '$KHOADIEUTRI_ID$'
        <isNotEmpty prepend="and" property="MABENHNHAN">
          (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
        </isNotEmpty>
        <isNotEmpty prepend="" property="TRANGTHAI">
          <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
            A.TRANGTHAI in ('$TRANGTHAI$')
          </isNotEqual>
        </isNotEmpty>
      )list) lst
      where
      lst.ROWNUMBER between $FROMROW$ and $TOROW$
      order by lst.SOTIEPNHAN
    </statement>
    <statement id="DAO00069_GetCountDanhSachNgoaiTru"  parameterClass="System.Collections.IDictionary" resultClass="DataObject">
      select count(A.SOBENHAN) as TOTALROWS
      from TT_NOITRU_BENHAN A
      inner join TT_TIEPNHAN B on B.TIEPNHAN_ID = A.TIEPNHAN_ID and (B.TRANGTHAI = '$LOAICAPCUU_NOITRU$' or B.TRANGTHAI = 'HOANTHANH')
      inner join TT_BENHNHAN C on C.BENHNHAN_ID = B.BENHNHAN_ID
      left join TT_NOITRU_LUUTRU D on D.BENHAN_ID = A.BENHAN_ID
      and D.LUUTRU_ID = ( select top 1 LUUTRU_ID from TT_NOITRU_LUUTRU where BENHAN_ID = A.BENHAN_ID order by BENHAN_ID desc)
      left join TT_NOITRU_XACNHAN E on E.BENHAN_ID = A.BENHAN_ID
      left join TT_NOITRU_LUUTRUCHITIET F on D.LUUTRU_ID = F.LUUTRU_ID and F.LUUTRUCHITIET_CURRENT = '1'
      and F.LUUTRUCHITIET_ID in (select top 1 LUUTRUCHITIET_ID from TT_NOITRU_LUUTRUCHITIET where LUUTRU_ID = D.LUUTRU_ID order by LUUTRUCHITIET_ID desc)
      where
      A.KHOACHUYENDEN_ID is not null  and A.LOAIBENHAN = '$LOAIBENHAN$' and
      (E.TRANGTHAI = 'DAXACNHAN' OR E.TRANGTHAI = 'HUYXACNHAN')
      <isNotEmpty prepend="and" property="TUNGAY">
        A.NGAYVAOKHOA &#62;&#61; '$TUNGAY$'
      </isNotEmpty>
      <isNotEmpty prepend="and" property="DENNGAY">
        A.NGAYVAOKHOA &#60;&#61; '$DENNGAY$'
      </isNotEmpty>
      and B.BENHVIEN_ID = '$BENHVIEN_ID$' and A.KHOACHUYENDEN_ID = '$KHOADIEUTRI_ID$'
      <isNotEmpty prepend="and" property="MABENHNHAN">
        (A.SOBENHAN like N'%$MABENHNHAN$%' OR C.TENBENHNHAN like N'%$MABENHNHAN$%')
      </isNotEmpty>
      <isNotEmpty prepend="" property="TRANGTHAI">
        <isNotEqual prepend="AND" property="TRANGTHAI" compareValue="TATCA">
          A.TRANGTHAI in ('$TRANGTHAI$')
        </isNotEqual>
      </isNotEmpty>
    </statement>
  </statements>
</sqlMap>
