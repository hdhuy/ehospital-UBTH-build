<?xml version="1.0" encoding="utf-8" ?>
<!--iBatis Map File-->
<sqlMap namespace="eHospital" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <statements>
        <!--Revision:0,676328de4e3654b86f5137c92bb3f9b0-->
        <statement id="DAO00205_GetAll" resultClass="DataObject">
            select *
            from TM_CATEGORY
            order by CATEGORY_ID
        </statement>
        <!--Revision:3,d2a931b51beacefbe13b567818766a77-->
        <statement id="DAO00205_GetAllWithCodeAndParentID" resultClass="DataObject">
            SELECT CAST(C.CATEGORY_ID AS INT) AS CATEGORY_ID, CAST(NVL(C.PARENT_ID,0) AS INT) AS PARENT_ID, C.CATEGORY_CODE, C.CATEGORY_NAME AS CATEGORY_NAME, C.FOLDER_LEVEL, C.IS_FOLDER, C.FOLDER_CODE, C.CATEGORY_TYPE
            FROM TM_CATEGORY C
            WHERE C.CATEGORY_ID != 0 AND C.BENHVIEN_ID = '$BENHVIEN_ID$'
            ORDER BY C.CATEGORY_ID
        </statement>
        <!--Revision:3,1808196d59a709386f7cc75394676b5e-->
        <statement id="DAO00205_GetAllWithoutDeactive" resultClass="DataObject">
            SELECT CAST(C.CATEGORY_ID AS INT) AS CATEGORY_ID, CAST(NVL(C.PARENT_ID,0) AS INT) AS PARENT_ID, C.CATEGORY_CODE, C.CATEGORY_NAME AS CATEGORY_NAME, C.FOLDER_LEVEL, C.IS_FOLDER, C.FOLDER_CODE, C.CATEGORY_TYPE
            FROM TM_CATEGORY C
            WHERE C.CATEGORY_ID != 0 AND C.BENHVIEN_ID = '$BENHVIEN_ID$' AND C.ENABLED = '1'
            ORDER BY C.CATEGORY_ID
        </statement>
        <!--Revision:0,a3f2730d644be6c81be3989d6b8be097-->
        <statement id="DAO00205_GetList" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            select *
            from TM_CATEGORY
            <dynamic prepend="where">
                <isParameterPresent>
                    <isNotEmpty prepend="and" property="CATEGORY_ID">
                        TM_CATEGORY.CATEGORY_ID = '$CATEGORY_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_CODE">
                        TM_CATEGORY.CATEGORY_CODE = '$CATEGORY_CODE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_NAME">
                        TM_CATEGORY.CATEGORY_NAME = '$CATEGORY_NAME$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ENABLED">
                        TM_CATEGORY.ENABLED = '$ENABLED$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="READ_ONLY">
                        TM_CATEGORY.READ_ONLY = '$READ_ONLY$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="IS_FOLDER">
                        TM_CATEGORY.IS_FOLDER = '$IS_FOLDER$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_TYPE">
                        TM_CATEGORY.CATEGORY_TYPE = '$CATEGORY_TYPE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="TABLE_NAME">
                        TM_CATEGORY.TABLE_NAME = '$TABLE_NAME$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="PARENT_ID">
                        TM_CATEGORY.PARENT_ID = '$PARENT_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FOLDER_LEVEL">
                        TM_CATEGORY.FOLDER_LEVEL = '$FOLDER_LEVEL$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FOLDER_CODE">
                        TM_CATEGORY.FOLDER_NAME = '$FOLDER_NAME$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="LIST_DATA">
                        TM_CATEGORY.LIST_DATA = '$LIST_DATA$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FIELD_BASE">
                        TM_CATEGORY.FIELD_BASE = '$FIELD_BASE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FIELD_DETAIL">
                        TM_CATEGORY.FIELD_DETAIL = '$FIELD_DETAIL$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_1">
                        TM_CATEGORY.ATTRIBUTE_1 = '$ATTRIBUTE_1$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_2">
                        TM_CATEGORY.ATTRIBUTE_2 = '$ATTRIBUTE_2$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_3">
                        TM_CATEGORY.ATTRIBUTE_3 = '$ATTRIBUTE_3$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_4">
                        TM_CATEGORY.ATTRIBUTE_4 = '$ATTRIBUTE_4$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_5">
                        TM_CATEGORY.ATTRIBUTE_5 = '$ATTRIBUTE_5$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="BENHVIEN_ID">
                        TM_CATEGORY.BENHVIEN_ID = '$BENHVIEN_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGAYTAO">
                        TM_CATEGORY.NGAYTAO = '$NGAYTAO$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGUOITAO_ID">
                        TM_CATEGORY.NGUOITAO_ID = '$NGUOITAO_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGAYCAPNHAT">
                        TM_CATEGORY.NGAYCAPNHAT = '$NGAYCAPNHAT$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGUOICAPNHAT_ID">
                        TM_CATEGORY.NGUOICAPNHAT_ID = '$NGUOICAPNHAT_ID$'
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
            order by CATEGORY_ID
        </statement>
        <!--Revision:0,e0f3803b5204b5430f9ad469e999a871-->
        <statement id="DAO00205_GetDetail" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            select *
            from TM_CATEGORY
            where TM_CATEGORY.CATEGORY_ID  = '$value$'
            order by CATEGORY_ID
        </statement>
        <!--Revision:0,9a6718ced671fa4cef9510b9ae8e6878-->
        <statement id="DAO00205_GetDetailP" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            select *
            from TM_CATEGORY
            where TM_CATEGORY.CATEGORY_ID  = '$CATEGORY_ID$'
            order by CATEGORY_ID
        </statement>
        <!--Revision:0,dfd5af72a4da2e88ce6045ade4805e80-->
        <insert id="DAO00205_Add" parameterClass="System.Collections.IDictionary" resultClass="System.Int64">
            <selectKey property="ID" type="pre" resultClass="System.Int64">
                select TM_CATEGORY_S.nextval as value from dual
            </selectKey>
            insert into TM_CATEGORY (
            #CATEGORY_ID#
            , CATEGORY_CODE
            , CATEGORY_NAME
            , ENABLED
            , READ_ONLY
            , IS_FOLDER
            , CATEGORY_TYPE
            , TABLE_NAME
            , PARENT_ID
            , FOLDER_LEVEL
            , FOLDER_CODE
            , LIST_DATA
            , FIELD_BASE
            , FIELD_DETAIL
            , ATTRIBUTE_1
            , ATTRIBUTE_2
            , ATTRIBUTE_3
            , ATTRIBUTE_4
            , ATTRIBUTE_5
            , BENHVIEN_ID
            , NGAYTAO
            , NGUOITAO_ID
            , NGAYCAPNHAT
            , NGUOICAPNHAT_ID
            ) values (
            #ID#
            , #CATEGORY_CODE#
            , #CATEGORY_NAME#
            , #ENABLED#
            , #READ_ONLY#
            , #IS_FOLDER#
            , #CATEGORY_TYPE#
            , #TABLE_NAME#
            , #PARENT_ID#
            , #FOLDER_LEVEL#
            , #FOLDER_CODE#
            , #LIST_DATA#
            , #FIELD_BASE#
            , #FIELD_DETAIL#
            , #ATTRIBUTE_1#
            , #ATTRIBUTE_2#
            , #ATTRIBUTE_3#
            , #ATTRIBUTE_4#
            , #ATTRIBUTE_5#
            , #BENHVIEN_ID#
            , #NGAYTAO#
            , #NGUOITAO_ID#
            , #NGAYCAPNHAT#
            , #NGUOICAPNHAT_ID#
            )
        </insert>
        <!--Revision:0,3a36b5ce77ab6b92552033467208dba2-->
        <update id="DAO00205_Update" parameterClass="System.Collections.IDictionary">
            update TM_CATEGORY set
            CATEGORY_CODE = #CATEGORY_CODE#
            , CATEGORY_NAME = #CATEGORY_NAME#
            , ENABLED = #ENABLED#
            , READ_ONLY = #READ_ONLY#
            , IS_FOLDER = #IS_FOLDER#
            , CATEGORY_TYPE = #CATEGORY_TYPE#
            , TABLE_NAME = #TABLE_NAME#
            , PARENT_ID = #PARENT_ID#
            , FOLDER_LEVEL = #FOLDER_LEVEL#
            , FOLDER_CODE = #FOLDER_CODE#
            , LIST_DATA = #LIST_DATA#
            , FIELD_BASE = #FIELD_BASE#
            , FIELD_DETAIL = #FIELD_DETAIL#
            , ATTRIBUTE_1 = #ATTRIBUTE_1#
            , ATTRIBUTE_2 = #ATTRIBUTE_2#
            , ATTRIBUTE_3 = #ATTRIBUTE_3#
            , ATTRIBUTE_4 = #ATTRIBUTE_4#
            , ATTRIBUTE_5 = #ATTRIBUTE_5#
            , BENHVIEN_ID = #BENHVIEN_ID#
            , NGAYCAPNHAT = #NGAYCAPNHAT#
            , NGUOICAPNHAT_ID = #NGUOICAPNHAT_ID#
            where
            CATEGORY_ID = '$CATEGORY_ID$'
        </update>
        <!--Revision:0,5b581c9896bc4d7d292ffe06cf77aa06-->
        <statement id="DAO00205_Delete" parameterClass="System.Collections.IDictionary" resultClass="System.Int32">
            delete from TM_CATEGORY
            where
            CATEGORY_ID = '$CATEGORY_ID$'
        </statement>
        <!--Revision:0,b13e6bfa26dcffcab7817c81a53afb72-->
        <statement id="DAO00205_DeleteP" parameterClass="System.Collections.IDictionary" resultClass="System.Int32">
            delete from TM_CATEGORY
            <dynamic prepend="where">
                <isParameterPresent>
                    <isNotEmpty prepend="and" property="CATEGORY_ID">
                        TM_CATEGORY.CATEGORY_ID = '$CATEGORY_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_CODE">
                        TM_CATEGORY.CATEGORY_CODE = '$CATEGORY_CODE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_NAME">
                        TM_CATEGORY.CATEGORY_NAME = '$CATEGORY_NAME$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ENABLED">
                        TM_CATEGORY.ENABLED = '$ENABLED$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="READ_ONLY">
                        TM_CATEGORY.READ_ONLY = '$READ_ONLY$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="IS_FOLDER">
                        TM_CATEGORY.IS_FOLDER = '$IS_FOLDER$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="CATEGORY_TYPE">
                        TM_CATEGORY.CATEGORY_TYPE = '$CATEGORY_TYPE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="TABLE_NAME">
                        TM_CATEGORY.TABLE_NAME = '$TABLE_NAME$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="PARENT_ID">
                        TM_CATEGORY.PARENT_ID = '$PARENT_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FOLDER_LEVEL">
                        TM_CATEGORY.FOLDER_LEVEL = '$FOLDER_LEVEL$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FOLDER_NAME">
                        TM_CATEGORY.FOLDER_CODE = '$FOLDER_CODE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="LIST_DATA">
                        TM_CATEGORY.LIST_DATA = '$LIST_DATA$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FIELD_BASE">
                        TM_CATEGORY.FIELD_BASE = '$FIELD_BASE$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="FIELD_DETAIL">
                        TM_CATEGORY.FIELD_DETAIL = '$FIELD_DETAIL$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_1">
                        TM_CATEGORY.ATTRIBUTE_1 = '$ATTRIBUTE_1$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_2">
                        TM_CATEGORY.ATTRIBUTE_2 = '$ATTRIBUTE_2$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_3">
                        TM_CATEGORY.ATTRIBUTE_3 = '$ATTRIBUTE_3$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_4">
                        TM_CATEGORY.ATTRIBUTE_4 = '$ATTRIBUTE_4$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="ATTRIBUTE_5">
                        TM_CATEGORY.ATTRIBUTE_5 = '$ATTRIBUTE_5$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="BENHVIEN_ID">
                        TM_CATEGORY.BENHVIEN_ID = '$BENHVIEN_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGAYTAO">
                        TM_CATEGORY.NGAYTAO = '$NGAYTAO$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGUOITAO_ID">
                        TM_CATEGORY.NGUOITAO_ID = '$NGUOITAO_ID$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGAYCAPNHAT">
                        TM_CATEGORY.NGAYCAPNHAT = '$NGAYCAPNHAT$'
                    </isNotEmpty>
                    <isNotEmpty prepend="and" property="NGUOICAPNHAT_ID">
                        TM_CATEGORY.NGUOICAPNHAT_ID = '$NGUOICAPNHAT_ID$'
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </statement>
        <!--Revision:2,c8a0ba5c2dad330ec6f60569a4d97326-->
        <statement id="DAO00205_GetTableColumns" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            SELECT T.COLUMN_NAME, T.TABLE_NAME, T.DATA_DEFAULT AS COLUMN_DEFAULT, (CASE T.NULLABLE WHEN 'N' THEN '0' ELSE '1' END) AS IS_NULLABLE
            , T.DATA_TYPE, T.DATA_LENGTH AS CHARACTER_MAXIMUM_LENGTH, NULL AS PRIMARY_TABLE, NULL AS PRIMARY_COLUMN
            , CASE T.CHARACTER_SET_NAME WHEN 'CHAR_CS' THEN 'UNICODE' ELSE NULL END AS CHARACTER_SET_NAME
            , CASE WHEN C1.COLUMN_NAME IS NULL THEN '0' ELSE '1' END AS IS_PRIMARY
            , CASE WHEN C1.COLUMN_NAME IS NULL THEN '0' ELSE '1' END AS IS_IDENTITY
            FROM   user_tab_columns T
            LEFT JOIN user_cons_columns C1 ON C1.TABLE_NAME = T.TABLE_NAME AND C1.COLUMN_NAME = T.COLUMN_NAME AND C1.POSITION IS NOT NULL
            WHERE  T.TABLE_NAME = '$TABLE_NAME$'
            ORDER BY T.COLUMN_ID
        </statement>
        <!--Revision:1,794a510bb95cf3da69a04461afac4ee6-->
        <statement id="DAO00205_GetTableColumns_Exclude" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            SELECT T.COLUMN_NAME, T.TABLE_NAME, T.DATA_DEFAULT AS COLUMN_DEFAULT, (CASE T.NULLABLE WHEN 'N' THEN '0' ELSE '1' END) AS IS_NULLABLE
            , T.DATA_TYPE, T.DATA_LENGTH AS CHARACTER_MAXIMUM_LENGTH, NULL AS PRIMARY_TABLE, NULL AS PRIMARY_COLUMN
            , CASE T.CHARACTER_SET_NAME WHEN 'CHAR_CS' THEN 'UNICODE' ELSE NULL END AS CHARACTER_SET_NAME
            , CASE WHEN C1.COLUMN_NAME IS NULL THEN '0' ELSE '1' END AS IS_PRIMARY
            , CASE WHEN C1.COLUMN_NAME IS NULL THEN '0' ELSE '1' END AS IS_IDENTITY
            FROM   user_tab_columns T
            LEFT JOIN user_cons_columns C1 ON C1.TABLE_NAME = T.TABLE_NAME AND C1.COLUMN_NAME = T.COLUMN_NAME
            WHERE  T.TABLE_NAME = '$TABLE_NAME$'
            AND T.COLUMN_NAME NOT IN
            (
            SELECT DICTIONARY_CODE
            FROM LST_DICTIONARY
            WHERE (DICTIONARY_TYPE_ID IN ('2362','2363','2364','2365','2366','2367') AND ENABLED = '1')
            AND (('$TABLE_NAME$' != 'TM_BENHVIEN') OR ('$TABLE_NAME$' = 'TM_BENHVIEN' AND DICTIONARY_CODE != 'BENHVIEN_ID'))
            )
            ORDER BY T.COLUMN_ID
        </statement>
        <!--Revision:1,672209c6d4cd0d5743a9492dac6e211f-->
        <insert id="DAO00205_InsertDM_Ibatis" parameterClass="System.Collections.IDictionary" resultClass="System.Int64">
            <selectKey property="ID" type="pre" resultClass="System.Int64">
                select $TABLE_NAME$_S.nextval as value from dual
            </selectKey>
            INSERT INTO $TABLE_NAME$
            ($COLUMN_ID$,
            <iterate property="COLUMN_LIST" open="" close=") " conjunction=",">
                $COLUMN_LIST[]$
            </iterate>
            VALUES
            (#ID#,
            <iterate property="COLUMN_VALUE" open="" close=") " conjunction=",">
                #COLUMN_VALUE[]#
            </iterate>
        </insert>
        <!--Revision:1,6cafe316b057e4ef3575cfeb37c6eab9-->
        <insert id="DAO00205_InsertDM" parameterClass="System.Collections.IDictionary" resultClass="System.Int64">
            <selectKey property="ID" type="pre" resultClass="System.Int64">
                select #TABLE_NAME#_S.nextval as value from dual
            </selectKey>
            INSERT INTO $TABLE_NAME$ ($COLUMN_ID$, $COLUMN_LIST$)
            VALUES (#ID#, #COLUMN_VALUE#)
        </insert>
        <!--Revision:0,42dae017df6f214b76c0c17d9f8b5d12-->
        <update id="DAO00205_UpdateDM_iBatis" parameterClass="System.Collections.IDictionary">
            UPDATE $TABLE_NAME$
            SET
            <iterate property="SET_LIST" conjunction=",">
                $SET_LIST[]$
            </iterate>
            WHERE
            <iterate property="WHERE_LIST" conjunction=",">
                $WHERE_LIST[]$
            </iterate>
        </update>
        <!--Revision:0,6a1e03437377043e8d1c9e2d10da3065-->
        <statement id="DAO00205_DeleteDM_iBatis" parameterClass="System.Collections.IDictionary" resultClass="System.Int32">
            DELETE $TABLE_NAME$
            WHERE
            <iterate property="WHERE_LIST" conjunction=",">
                $WHERE_LIST[]$
            </iterate>
        </statement>
        <!--Revision:0,77a4ecbe5a9df5ff990d2eb0b8fe15f8-->
        <statement id="DAO00205_GetLSTDictionary" parameterClass="System.Collections.IDictionary" resultClass="DataObject">
            SELECT DICTIONARY_ID AS FIELDCODE, DICTIONARY_NAME AS FIELDNAME, PARENT_ID AS RELATION_CODE
            FROM LST_DICTIONARY
            WHERE DICTIONARY_TYPE_CODE = '$DICTIONARY_TYPE_CODE$'
            <!--AND BENHVIEN_ID = '$BENHVIEN_ID$'-->
            AND ENABLED = '1'
        </statement>
    </statements>
</sqlMap>
